(function() {var implementors = {};
implementors["rubble"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/enum.Error.html\" title=\"enum rubble::Error\">Error</a>","synthetic":true,"types":["rubble::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/att/struct.Handle.html\" title=\"struct rubble::att::Handle\">Handle</a>","synthetic":true,"types":["rubble::att::handle::Handle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/att/struct.HandleRange.html\" title=\"struct rubble::att::HandleRange\">HandleRange</a>","synthetic":true,"types":["rubble::att::handle::HandleRange"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"rubble/att/struct.AttributeServer.html\" title=\"struct rubble::att::AttributeServer\">AttributeServer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::att::server::AttributeServer"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"struct\" href=\"rubble/att/struct.AttributeServerTx.html\" title=\"struct rubble::att::AttributeServerTx\">AttributeServerTx</a>&lt;'a, A&gt;","synthetic":true,"types":["rubble::att::server::AttributeServerTx"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rubble/att/struct.Attribute.html\" title=\"struct rubble::att::Attribute\">Attribute</a>&lt;'a&gt;","synthetic":true,"types":["rubble::att::Attribute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/att/struct.NoAttributes.html\" title=\"struct rubble::att::NoAttributes\">NoAttributes</a>","synthetic":true,"types":["rubble::att::NoAttributes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/att/enum.AttUuid.html\" title=\"enum rubble::att::AttUuid\">AttUuid</a>","synthetic":true,"types":["rubble::att::uuid::AttUuid"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/beacon/struct.Beacon.html\" title=\"struct rubble::beacon::Beacon\">Beacon</a>","synthetic":true,"types":["rubble::beacon::Beacon"]},{"text":"impl&lt;C, F&gt; Freeze for <a class=\"struct\" href=\"rubble/beacon/struct.BeaconScanner.html\" title=\"struct rubble::beacon::BeaconScanner\">BeaconScanner</a>&lt;C, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::beacon::BeaconScanner"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rubble/bytes/struct.BytesOr.html\" title=\"struct rubble::bytes::BytesOr\">BytesOr</a>&lt;'a, T&gt;","synthetic":true,"types":["rubble::bytes::BytesOr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rubble/bytes/struct.ByteWriter.html\" title=\"struct rubble::bytes::ByteWriter\">ByteWriter</a>&lt;'a&gt;","synthetic":true,"types":["rubble::bytes::ByteWriter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rubble/bytes/struct.ByteReader.html\" title=\"struct rubble::bytes::ByteReader\">ByteReader</a>&lt;'a&gt;","synthetic":true,"types":["rubble::bytes::ByteReader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/ecdh/struct.P256Provider.html\" title=\"struct rubble::ecdh::P256Provider\">P256Provider</a>","synthetic":true,"types":["rubble::ecdh::p256::P256Provider"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/ecdh/struct.P256SecretKey.html\" title=\"struct rubble::ecdh::P256SecretKey\">P256SecretKey</a>","synthetic":true,"types":["rubble::ecdh::p256::P256SecretKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/ecdh/struct.RingProvider.html\" title=\"struct rubble::ecdh::RingProvider\">RingProvider</a>","synthetic":true,"types":["rubble::ecdh::ring::RingProvider"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/ecdh/struct.RingSecretKey.html\" title=\"struct rubble::ecdh::RingSecretKey\">RingSecretKey</a>","synthetic":true,"types":["rubble::ecdh::ring::RingSecretKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/ecdh/struct.PublicKey.html\" title=\"struct rubble::ecdh::PublicKey\">PublicKey</a>","synthetic":true,"types":["rubble::ecdh::PublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/ecdh/struct.SharedSecret.html\" title=\"struct rubble::ecdh::SharedSecret\">SharedSecret</a>","synthetic":true,"types":["rubble::ecdh::SharedSecret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/ecdh/struct.InvalidPublicKey.html\" title=\"struct rubble::ecdh::InvalidPublicKey\">InvalidPublicKey</a>","synthetic":true,"types":["rubble::ecdh::InvalidPublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/gatt/struct.BatteryServiceAttrs.html\" title=\"struct rubble::gatt::BatteryServiceAttrs\">BatteryServiceAttrs</a>","synthetic":true,"types":["rubble::gatt::BatteryServiceAttrs"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rubble/gatt/struct.Attributes.html\" title=\"struct rubble::gatt::Attributes\">Attributes</a>&lt;'a&gt;","synthetic":true,"types":["rubble::gatt::Attributes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/gatt/struct.MidiServiceAttrs.html\" title=\"struct rubble::gatt::MidiServiceAttrs\">MidiServiceAttrs</a>","synthetic":true,"types":["rubble::gatt::MidiServiceAttrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/gatt/characteristic/struct.Properties.html\" title=\"struct rubble::gatt::characteristic::Properties\">Properties</a>","synthetic":true,"types":["rubble::gatt::characteristic::Properties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/gatt/characteristic/struct.BatteryLevel.html\" title=\"struct rubble::gatt::characteristic::BatteryLevel\">BatteryLevel</a>","synthetic":true,"types":["rubble::gatt::characteristic::BatteryLevel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/gatt/characteristic/enum.Appearance.html\" title=\"enum rubble::gatt::characteristic::Appearance\">Appearance</a>","synthetic":true,"types":["rubble::gatt::characteristic::Appearance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/l2cap/struct.Channel.html\" title=\"struct rubble::l2cap::Channel\">Channel</a>","synthetic":true,"types":["rubble::l2cap::Channel"]},{"text":"impl&lt;'a, P:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rubble/l2cap/struct.ChannelData.html\" title=\"struct rubble::l2cap::ChannelData\">ChannelData</a>&lt;'a, P&gt;","synthetic":true,"types":["rubble::l2cap::ChannelData"]},{"text":"impl&lt;A, S&gt; Freeze for <a class=\"struct\" href=\"rubble/l2cap/struct.BleChannelMap.html\" title=\"struct rubble::l2cap::BleChannelMap\">BleChannelMap</a>&lt;A, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::l2cap::BleChannelMap"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"rubble/l2cap/struct.L2CAPState.html\" title=\"struct rubble::l2cap::L2CAPState\">L2CAPState</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::l2cap::L2CAPState"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rubble/l2cap/struct.Sender.html\" title=\"struct rubble::l2cap::Sender\">Sender</a>&lt;'a&gt;","synthetic":true,"types":["rubble::l2cap::Sender"]},{"text":"impl&lt;'a, M, P&gt; Freeze for <a class=\"struct\" href=\"rubble/l2cap/struct.L2CAPStateTx.html\" title=\"struct rubble::l2cap::L2CAPStateTx\">L2CAPStateTx</a>&lt;'a, M, P&gt;","synthetic":true,"types":["rubble::l2cap::L2CAPStateTx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/struct.CompanyId.html\" title=\"struct rubble::link::CompanyId\">CompanyId</a>","synthetic":true,"types":["rubble::link::comp_id::CompanyId"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"rubble/link/struct.Connection.html\" title=\"struct rubble::link::Connection\">Connection</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.PacketQueue\" title=\"type rubble::config::Config::PacketQueue\">PacketQueue</a> as <a class=\"trait\" href=\"rubble/link/queue/trait.PacketQueue.html\" title=\"trait rubble::link::queue::PacketQueue\">PacketQueue</a>&gt;::<a class=\"type\" href=\"rubble/link/queue/trait.PacketQueue.html#associatedtype.Consumer\" title=\"type rubble::link::queue::PacketQueue::Consumer\">Consumer</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.PacketQueue\" title=\"type rubble::config::Config::PacketQueue\">PacketQueue</a> as <a class=\"trait\" href=\"rubble/link/queue/trait.PacketQueue.html\" title=\"trait rubble::link::queue::PacketQueue\">PacketQueue</a>&gt;::<a class=\"type\" href=\"rubble/link/queue/trait.PacketQueue.html#associatedtype.Producer\" title=\"type rubble::link::queue::PacketQueue::Producer\">Producer</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::link::connection::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/struct.DeviceAddress.html\" title=\"struct rubble::link::DeviceAddress\">DeviceAddress</a>","synthetic":true,"types":["rubble::link::device_address::DeviceAddress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/struct.FeatureSet.html\" title=\"struct rubble::link::FeatureSet\">FeatureSet</a>","synthetic":true,"types":["rubble::link::features::FeatureSet"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"rubble/link/struct.Responder.html\" title=\"struct rubble::link::Responder\">Responder</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.ChannelMapper\" title=\"type rubble::config::Config::ChannelMapper\">ChannelMapper</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.PacketQueue\" title=\"type rubble::config::Config::PacketQueue\">PacketQueue</a> as <a class=\"trait\" href=\"rubble/link/queue/trait.PacketQueue.html\" title=\"trait rubble::link::queue::PacketQueue\">PacketQueue</a>&gt;::<a class=\"type\" href=\"rubble/link/queue/trait.PacketQueue.html#associatedtype.Consumer\" title=\"type rubble::link::queue::PacketQueue::Consumer\">Consumer</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.PacketQueue\" title=\"type rubble::config::Config::PacketQueue\">PacketQueue</a>: <a class=\"trait\" href=\"rubble/link/queue/trait.PacketQueue.html\" title=\"trait rubble::link::queue::PacketQueue\">PacketQueue</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.PacketQueue\" title=\"type rubble::config::Config::PacketQueue\">PacketQueue</a> as <a class=\"trait\" href=\"rubble/link/queue/trait.PacketQueue.html\" title=\"trait rubble::link::queue::PacketQueue\">PacketQueue</a>&gt;::<a class=\"type\" href=\"rubble/link/queue/trait.PacketQueue.html#associatedtype.Producer\" title=\"type rubble::link::queue::PacketQueue::Producer\">Producer</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::link::responder::Responder"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"rubble/link/struct.LinkLayer.html\" title=\"struct rubble::link::LinkLayer\">LinkLayer</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.PacketQueue\" title=\"type rubble::config::Config::PacketQueue\">PacketQueue</a> as <a class=\"trait\" href=\"rubble/link/queue/trait.PacketQueue.html\" title=\"trait rubble::link::queue::PacketQueue\">PacketQueue</a>&gt;::<a class=\"type\" href=\"rubble/link/queue/trait.PacketQueue.html#associatedtype.Consumer\" title=\"type rubble::link::queue::PacketQueue::Consumer\">Consumer</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.PacketQueue\" title=\"type rubble::config::Config::PacketQueue\">PacketQueue</a>: <a class=\"trait\" href=\"rubble/link/queue/trait.PacketQueue.html\" title=\"trait rubble::link::queue::PacketQueue\">PacketQueue</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.PacketQueue\" title=\"type rubble::config::Config::PacketQueue\">PacketQueue</a> as <a class=\"trait\" href=\"rubble/link/queue/trait.PacketQueue.html\" title=\"trait rubble::link::queue::PacketQueue\">PacketQueue</a>&gt;::<a class=\"type\" href=\"rubble/link/queue/trait.PacketQueue.html#associatedtype.Producer\" title=\"type rubble::link::queue::PacketQueue::Producer\">Producer</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"rubble/config/trait.Config.html\" title=\"trait rubble::config::Config\">Config</a>&gt;::<a class=\"type\" href=\"rubble/config/trait.Config.html#associatedtype.Timer\" title=\"type rubble::config::Config::Timer\">Timer</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::link::LinkLayer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/struct.Cmd.html\" title=\"struct rubble::link::Cmd\">Cmd</a>","synthetic":true,"types":["rubble::link::Cmd"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/link/enum.AddressKind.html\" title=\"enum rubble::link::AddressKind\">AddressKind</a>","synthetic":true,"types":["rubble::link::device_address::AddressKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/link/enum.NextUpdate.html\" title=\"enum rubble::link::NextUpdate\">NextUpdate</a>","synthetic":true,"types":["rubble::link::NextUpdate"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/link/enum.RadioCmd.html\" title=\"enum rubble::link::RadioCmd\">RadioCmd</a>","synthetic":true,"types":["rubble::link::RadioCmd"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rubble/link/ad_structure/struct.ServiceUuids.html\" title=\"struct rubble::link::ad_structure::ServiceUuids\">ServiceUuids</a>&lt;'a, T&gt;","synthetic":true,"types":["rubble::link::ad_structure::ServiceUuids"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/ad_structure/struct.Flags.html\" title=\"struct rubble::link::ad_structure::Flags\">Flags</a>","synthetic":true,"types":["rubble::link::ad_structure::Flags"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rubble/link/ad_structure/enum.AdStructure.html\" title=\"enum rubble::link::ad_structure::AdStructure\">AdStructure</a>&lt;'a&gt;","synthetic":true,"types":["rubble::link::ad_structure::AdStructure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/advertising/struct.ConnectRequestData.html\" title=\"struct rubble::link::advertising::ConnectRequestData\">ConnectRequestData</a>","synthetic":true,"types":["rubble::link::advertising::ConnectRequestData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/advertising/struct.PduBuf.html\" title=\"struct rubble::link::advertising::PduBuf\">PduBuf</a>","synthetic":true,"types":["rubble::link::advertising::PduBuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/advertising/struct.Header.html\" title=\"struct rubble::link::advertising::Header\">Header</a>","synthetic":true,"types":["rubble::link::advertising::Header"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rubble/link/advertising/enum.Pdu.html\" title=\"enum rubble::link::advertising::Pdu\">Pdu</a>&lt;'a&gt;","synthetic":true,"types":["rubble::link::advertising::Pdu"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/link/advertising/enum.SleepClockAccuracy.html\" title=\"enum rubble::link::advertising::SleepClockAccuracy\">SleepClockAccuracy</a>","synthetic":true,"types":["rubble::link::advertising::SleepClockAccuracy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/link/advertising/enum.PduType.html\" title=\"enum rubble::link::advertising::PduType\">PduType</a>","synthetic":true,"types":["rubble::link::advertising::PduType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/data/struct.Header.html\" title=\"struct rubble::link::data::Header\">Header</a>","synthetic":true,"types":["rubble::link::data::Header"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/link/data/enum.Llid.html\" title=\"enum rubble::link::data::Llid\">Llid</a>","synthetic":true,"types":["rubble::link::data::Llid"]},{"text":"impl&lt;'a, L&gt; Freeze for <a class=\"enum\" href=\"rubble/link/data/enum.Pdu.html\" title=\"enum rubble::link::data::Pdu\">Pdu</a>&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::link::data::Pdu"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/filter/struct.AllowAll.html\" title=\"struct rubble::link::filter::AllowAll\">AllowAll</a>","synthetic":true,"types":["rubble::link::filter::AllowAll"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rubble/link/filter/struct.WhitelistFilter.html\" title=\"struct rubble::link::filter::WhitelistFilter\">WhitelistFilter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::link::filter::WhitelistFilter"]},{"text":"impl&lt;S, C&gt; Freeze for <a class=\"struct\" href=\"rubble/link/filter/struct.AdvFilter.html\" title=\"struct rubble::link::filter::AdvFilter\">AdvFilter</a>&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::link::filter::AdvFilter"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"rubble/link/filter/struct.ScanFilter.html\" title=\"struct rubble::link::filter::ScanFilter\">ScanFilter</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::link::filter::ScanFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/llcp/struct.ConnectionParamRequest.html\" title=\"struct rubble::link::llcp::ConnectionParamRequest\">ConnectionParamRequest</a>","synthetic":true,"types":["rubble::link::llcp::ConnectionParamRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/link/llcp/struct.ConnectionUpdateData.html\" title=\"struct rubble::link::llcp::ConnectionUpdateData\">ConnectionUpdateData</a>","synthetic":true,"types":["rubble::link::llcp::ConnectionUpdateData"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rubble/link/llcp/enum.ControlPdu.html\" title=\"enum rubble::link::llcp::ControlPdu\">ControlPdu</a>&lt;'a&gt;","synthetic":true,"types":["rubble::link::llcp::ControlPdu"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/link/llcp/enum.ControlOpcode.html\" title=\"enum rubble::link::llcp::ControlOpcode\">ControlOpcode</a>","synthetic":true,"types":["rubble::link::llcp::ControlOpcode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/link/llcp/enum.VersionNumber.html\" title=\"enum rubble::link::llcp::VersionNumber\">VersionNumber</a>","synthetic":true,"types":["rubble::link::llcp::VersionNumber"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rubble/link/queue/struct.Consume.html\" title=\"struct rubble::link::queue::Consume\">Consume</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::link::queue::Consume"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rubble/link/queue/struct.SimpleQueue.html\" title=\"struct rubble::link::queue::SimpleQueue\">SimpleQueue</a>","synthetic":true,"types":["rubble::link::queue::SimpleQueue"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rubble/link/queue/struct.SimpleProducer.html\" title=\"struct rubble::link::queue::SimpleProducer\">SimpleProducer</a>&lt;'a&gt;","synthetic":true,"types":["rubble::link::queue::SimpleProducer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rubble/link/queue/struct.SimpleConsumer.html\" title=\"struct rubble::link::queue::SimpleConsumer\">SimpleConsumer</a>&lt;'a&gt;","synthetic":true,"types":["rubble::link::queue::SimpleConsumer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/phy/struct.AdvertisingChannel.html\" title=\"struct rubble::phy::AdvertisingChannel\">AdvertisingChannel</a>","synthetic":true,"types":["rubble::phy::AdvertisingChannel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/phy/struct.DataChannel.html\" title=\"struct rubble::phy::DataChannel\">DataChannel</a>","synthetic":true,"types":["rubble::phy::DataChannel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/security/struct.NoSecurity.html\" title=\"struct rubble::security::NoSecurity\">NoSecurity</a>","synthetic":true,"types":["rubble::security::NoSecurity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/security/struct.SecureConnections.html\" title=\"struct rubble::security::SecureConnections\">SecureConnections</a>","synthetic":true,"types":["rubble::security::SecureConnections"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"rubble/security/struct.SecurityManager.html\" title=\"struct rubble::security::SecurityManager\">SecurityManager</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble::security::SecurityManager"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/security/struct.AuthReq.html\" title=\"struct rubble::security::AuthReq\">AuthReq</a>","synthetic":true,"types":["rubble::security::AuthReq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/security/struct.KeyDistribution.html\" title=\"struct rubble::security::KeyDistribution\">KeyDistribution</a>","synthetic":true,"types":["rubble::security::KeyDistribution"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/security/enum.IoCapabilities.html\" title=\"enum rubble::security::IoCapabilities\">IoCapabilities</a>","synthetic":true,"types":["rubble::security::IoCapabilities"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/security/enum.BondingType.html\" title=\"enum rubble::security::BondingType\">BondingType</a>","synthetic":true,"types":["rubble::security::BondingType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/time/struct.Duration.html\" title=\"struct rubble::time::Duration\">Duration</a>","synthetic":true,"types":["rubble::time::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/time/struct.Instant.html\" title=\"struct rubble::time::Instant\">Instant</a>","synthetic":true,"types":["rubble::time::Instant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/uuid/struct.Uuid16.html\" title=\"struct rubble::uuid::Uuid16\">Uuid16</a>","synthetic":true,"types":["rubble::uuid::Uuid16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rubble/uuid/struct.Uuid32.html\" title=\"struct rubble::uuid::Uuid32\">Uuid32</a>","synthetic":true,"types":["rubble::uuid::Uuid32"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rubble/uuid/enum.UuidKind.html\" title=\"enum rubble::uuid::UuidKind\">UuidKind</a>","synthetic":true,"types":["rubble::uuid::UuidKind"]}];
implementors["rubble_nrf5x"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rubble_nrf5x/radio/struct.BleRadio.html\" title=\"struct rubble_nrf5x::radio::BleRadio\">BleRadio</a>","synthetic":true,"types":["rubble_nrf5x::radio::BleRadio"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rubble_nrf5x/timer/struct.BleTimer.html\" title=\"struct rubble_nrf5x::timer::BleTimer\">BleTimer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble_nrf5x::timer::BleTimer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rubble_nrf5x/timer/struct.StampSource.html\" title=\"struct rubble_nrf5x::timer::StampSource\">StampSource</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rubble_nrf5x::timer::StampSource"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()